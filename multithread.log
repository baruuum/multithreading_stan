running
  '/Library/Frameworks/R.framework/Versions/4.0/Resources/bin/R --no-echo --no-restore --no-save --no-restore --file=multithread.R'

here() starts at /Volumes/D/r/tests/reduce_sum_stan
This is cmdstanr version 0.1.3
- Online documentation and vignettes at mc-stan.org/cmdstanr
- CmdStan path set to: /Users/bp522/.cmdstanr/cmdstan-2.24.1
- Use set_cmdstan_path() to change the path
x86_64-apple-darwin13.4.0-ar: creating archive stan/lib/stan_math/lib/sundials_5.2.0/lib/libsundials_nvecserial.a
x86_64-apple-darwin13.4.0-ar: creating archive stan/lib/stan_math/lib/sundials_5.2.0/lib/libsundials_cvodes.a
x86_64-apple-darwin13.4.0-ar: creating archive stan/lib/stan_math/lib/sundials_5.2.0/lib/libsundials_idas.a
x86_64-apple-darwin13.4.0-ar: creating archive stan/lib/stan_math/lib/sundials_5.2.0/lib/libsundials_kinsol.a
/Users/bp522/.cmdstanr/cmdstan-2.24.1/stan/lib/stan_math/lib/tbb_2019_U8/build/Makefile.tbb:28: CONFIG: cfg=release arch=intel64 compiler=clang target=macos runtime=cc12.0.0_os10.15.7
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(value_semantic.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(convert.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(variables_map.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(options_description.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(positional_options.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(cmdline.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: object file (stan/lib/stan_math/lib/boost_1.72.0/stage/lib/libboost_program_options.a(utf8_codecvt_facet.o)) was built for newer OSX version (10.15) than being linked (10.9)
ld: warning: cannot export hidden symbol tbb::bad_last_alloc::~bad_last_alloc() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::missing_wait::~missing_wait() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::invalid_multiple_scheduling::~invalid_multiple_scheduling() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::improper_lock::~improper_lock() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::user_abort::~user_abort() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::bad_last_alloc::~bad_last_alloc() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::improper_lock::~improper_lock() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::user_abort::~user_abort() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::invalid_multiple_scheduling::~invalid_multiple_scheduling() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::missing_wait::~missing_wait() from tbb_misc.o
ld: warning: cannot export hidden symbol tbb::captured_exception::throw_self() from task_group_context.o
ld: warning: cannot export hidden symbol tbb::empty_task::~empty_task() from arena.o
ld: warning: cannot export hidden symbol tbb::empty_task::~empty_task() from arena.o
ld: warning: cannot export hidden symbol tbb::empty_task::execute() from arena.o
ld: warning: cannot export hidden symbol tbb::empty_task::~empty_task() from scheduler.o
ld: warning: cannot export hidden symbol tbb::empty_task::~empty_task() from scheduler.o
ld: warning: cannot export hidden symbol tbb::empty_task::execute() from scheduler.o
Compiling Stan program...
11.152 sec elapsed
Moved .hpp file and set internal path to new location:
- /Volumes/D/r/tests/reduce_sum_stan/stan/logit_single.hpp
data {
  
  int<lower=0> N;
  vector[N] x;
  int<lower = 0, upper = 1> y[N];
  
}

parameters {
  
  vector[2] beta;
  
}

model {
  
  beta ~ normal(0, 3);
  y ~ bernoulli_logit(beta[1] + beta[2] * x);
  
}

Running MCMC with 2 parallel chains...

Chain 1 Iteration:    1 / 6000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 6000 [  0%]  (Warmup) 
Chain 1 Iteration:  500 / 6000 [  8%]  (Warmup) 
Chain 2 Iteration:  500 / 6000 [  8%]  (Warmup) 
Chain 1 Iteration: 1000 / 6000 [ 16%]  (Warmup) 
Chain 1 Iteration: 1001 / 6000 [ 16%]  (Sampling) 
Chain 2 Iteration: 1000 / 6000 [ 16%]  (Warmup) 
Chain 2 Iteration: 1001 / 6000 [ 16%]  (Sampling) 
Chain 2 Iteration: 1500 / 6000 [ 25%]  (Sampling) 
Chain 1 Iteration: 1500 / 6000 [ 25%]  (Sampling) 
Chain 2 Iteration: 2000 / 6000 [ 33%]  (Sampling) 
Chain 1 Iteration: 2000 / 6000 [ 33%]  (Sampling) 
Chain 2 Iteration: 2500 / 6000 [ 41%]  (Sampling) 
Chain 1 Iteration: 2500 / 6000 [ 41%]  (Sampling) 
Chain 2 Iteration: 3000 / 6000 [ 50%]  (Sampling) 
Chain 1 Iteration: 3000 / 6000 [ 50%]  (Sampling) 
Chain 2 Iteration: 3500 / 6000 [ 58%]  (Sampling) 
Chain 2 Iteration: 4000 / 6000 [ 66%]  (Sampling) 
Chain 1 Iteration: 3500 / 6000 [ 58%]  (Sampling) 
Chain 2 Iteration: 4500 / 6000 [ 75%]  (Sampling) 
Chain 1 Iteration: 4000 / 6000 [ 66%]  (Sampling) 
Chain 2 Iteration: 5000 / 6000 [ 83%]  (Sampling) 
Chain 1 Iteration: 4500 / 6000 [ 75%]  (Sampling) 
Chain 2 Iteration: 5500 / 6000 [ 91%]  (Sampling) 
Chain 1 Iteration: 5000 / 6000 [ 83%]  (Sampling) 
Chain 2 Iteration: 6000 / 6000 [100%]  (Sampling) 
Chain 2 finished in 11.9 seconds.
Chain 1 Iteration: 5500 / 6000 [ 91%]  (Sampling) 
Chain 1 Iteration: 6000 / 6000 [100%]  (Sampling) 
Chain 1 finished in 13.8 seconds.

Both chains finished successfully.
Mean chain execution time: 12.9 seconds.
Total execution time: 13.9 seconds.
# A tibble: 3 x 10
  variable     mean   median     sd    mad       q5      q95  rhat ess_bulk
  <chr>       <dbl>    <dbl>  <dbl>  <dbl>    <dbl>    <dbl> <dbl>    <dbl>
1 lp__     -6.55e+3 -6.55e+3 0.997  0.741  -6.56e+3 -6.55e+3  1.00    4813.
2 beta[1]  -5.22e-1 -5.22e-1 0.0213 0.0213 -5.58e-1 -4.88e-1  1.00    8110.
3 beta[2]   2.27e-1  2.27e-1 0.0210 0.0211  1.93e-1  2.62e-1  1.00    8618.
# … with 1 more variable: ess_tail <dbl>
Compiling Stan program...
51.74 sec elapsed
Moved .hpp file and set internal path to new location:
- /Volumes/D/r/tests/reduce_sum_stan/stan/logit_multi.hpp
functions {
  
  real partial_sum(
    int[] y_slice,
    int start,
    int end,
    vector beta,
    vector x
  ){
    
    return bernoulli_logit_lpmf(y_slice | beta[1] + beta[2] * x[start:end]);
    
  }
  
}

data {
  
  int<lower = 0> N;
  vector[N] x;
  int<lower = 0, upper = 1> y[N];
  int<lower = 1> grainsize;
  
}

parameters {
  
  vector[2] beta;
  
}

model {
  
  beta ~ normal(0, 3);
  target += reduce_sum(partial_sum, y, grainsize, beta, x);

}

Running MCMC with 2 parallel chains, with 3 thread(s) per chain...

Chain 1 Iteration:    1 / 6000 [  0%]  (Warmup) 
Chain 2 Iteration:    1 / 6000 [  0%]  (Warmup) 
Chain 1 Iteration:  500 / 6000 [  8%]  (Warmup) 
Chain 2 Iteration:  500 / 6000 [  8%]  (Warmup) 
Chain 1 Iteration: 1000 / 6000 [ 16%]  (Warmup) 
Chain 1 Iteration: 1001 / 6000 [ 16%]  (Sampling) 
Chain 2 Iteration: 1000 / 6000 [ 16%]  (Warmup) 
Chain 2 Iteration: 1001 / 6000 [ 16%]  (Sampling) 
Chain 1 Iteration: 1500 / 6000 [ 25%]  (Sampling) 
Chain 2 Iteration: 1500 / 6000 [ 25%]  (Sampling) 
Chain 2 Iteration: 2000 / 6000 [ 33%]  (Sampling) 
Chain 1 Iteration: 2000 / 6000 [ 33%]  (Sampling) 
Chain 1 Iteration: 2500 / 6000 [ 41%]  (Sampling) 
Chain 2 Iteration: 2500 / 6000 [ 41%]  (Sampling) 
Chain 2 Iteration: 3000 / 6000 [ 50%]  (Sampling) 
Chain 1 Iteration: 3000 / 6000 [ 50%]  (Sampling) 
Chain 2 Iteration: 3500 / 6000 [ 58%]  (Sampling) 
Chain 1 Iteration: 3500 / 6000 [ 58%]  (Sampling) 
Chain 2 Iteration: 4000 / 6000 [ 66%]  (Sampling) 
Chain 1 Iteration: 4000 / 6000 [ 66%]  (Sampling) 
Chain 2 Iteration: 4500 / 6000 [ 75%]  (Sampling) 
Chain 1 Iteration: 4500 / 6000 [ 75%]  (Sampling) 
Chain 2 Iteration: 5000 / 6000 [ 83%]  (Sampling) 
Chain 1 Iteration: 5000 / 6000 [ 83%]  (Sampling) 
Chain 2 Iteration: 5500 / 6000 [ 91%]  (Sampling) 
Chain 1 Iteration: 5500 / 6000 [ 91%]  (Sampling) 
Chain 2 Iteration: 6000 / 6000 [100%]  (Sampling) 
Chain 2 finished in 8.2 seconds.
Chain 1 Iteration: 6000 / 6000 [100%]  (Sampling) 
Chain 1 finished in 8.6 seconds.

Both chains finished successfully.
Mean chain execution time: 8.4 seconds.
Total execution time: 8.6 seconds.
# A tibble: 3 x 10
  variable     mean   median     sd    mad       q5      q95  rhat ess_bulk
  <chr>       <dbl>    <dbl>  <dbl>  <dbl>    <dbl>    <dbl> <dbl>    <dbl>
1 lp__     -6.55e+3 -6.55e+3 0.997  0.741  -6.56e+3 -6.55e+3  1.00    4813.
2 beta[1]  -5.22e-1 -5.22e-1 0.0213 0.0213 -5.58e-1 -4.88e-1  1.00    8110.
3 beta[2]   2.27e-1  2.27e-1 0.0210 0.0211  1.93e-1  2.62e-1  1.00    8618.
# … with 1 more variable: ess_tail <dbl>
